using Full_Metal_Planete.src.game.game_window;
using Full_Metal_Planete.src.user_controls.unit_overlay;
using Metier.Unites;
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media.Imaging;

namespace Full_Metal_Planete.src.decorators.units_decorators
{
    public class SpaceshipHMI : UnitHMI
    {
        public override double Width => 170;

        public override double Height => 170;

        public override Image GhostImage { get; protected set; }

        public MapHMI MapHMI { get; set; }

        public SpaceshipHMI(Unite unite, MapHMI map) : base(unite)
        {
            GhostImage = new Image()
            {
                Source = new BitmapImage(new Uri(Environment.CurrentDirectory + "\\src\\files\\images\\sprites\\astronef.png")),
                Height = Height,
                Width = Width,
            };
            MapHMI = map;
        }

        protected override void Unit_OnClick(object sender, MouseButtonEventArgs e)
        {
            var c = Image.Parent;
            if (c is Canvas canvas)
            {
                var overlay = new SpaceshipOverlay(this);
                Canvas.SetLeft(overlay, Position.X - 10);
                Canvas.SetTop(overlay, Position.Y);
                Canvas.SetZIndex(overlay, FullscreenWindow.MAXZINDEX + 1);
                canvas.Children.Add(overlay);
            }
        }

        public override Point GetCenter()
        {
            return new Point((Image.Width / 2), (Image.Height / 2) + 13);
        }

        public override void PlaceUnit(Canvas canvas, BoxHMI boxIHM)
        {
            Image image = Image;
            #region canvas
            Canvas.SetLeft(image, (boxIHM.GetCenter().X - GetCenter().X));
            Canvas.SetTop(image, (boxIHM.GetCenter().Y - GetCenter().Y));
            Canvas.SetZIndex(image, FullscreenWindow.MAXZINDEX);
            #endregion
            canvas.Children.Add(image);
            Position = new Point(Canvas.GetLeft(Image), Canvas.GetTop(Image));
            BoxHMI = boxIHM;
        }
    }
}
