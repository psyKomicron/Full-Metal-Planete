using Metier.Carte;
using Metier.Carte.Cases;
using System.Collections.Generic;

namespace Metier.Unites
{
    public class Astronef : Unite
    {
        List<Tourelle> tour;

        public Astronef(Case position, Joueur joueur) : base(position, joueur)
        {
            tour = new List<Tourelle>();
        }

        public override TypeEntite Type
        {
            get => TypeEntite.ASTRONEF;
        }

        /*
         * Cette fonction met dans la case en haut, bas gauche, et bas droite de l'astronef ses tourelles
         */
        public void Tourelle()
        {
            Tourelle t1 = new Tourelle(Position.Voisin(TypeDirection.Haut), Joueur);
            Tourelle t2 = new Tourelle(Position.Voisin(TypeDirection.BasDroite), Joueur);
            Tourelle t3 = new Tourelle(Position.Voisin(TypeDirection.BasGauche), Joueur);

            tour.Add(t1);
            tour.Add(t2);
            tour.Add(t3);

            Joueur.Carte.AjouterUnite(t1, Position.Voisin(TypeDirection.Haut));
            Joueur.Carte.AjouterUnite(t2, Position.Voisin(TypeDirection.BasDroite));
            Joueur.Carte.AjouterUnite(t3, Position.Voisin(TypeDirection.BasGauche));
        }

        /*
         * Retourne si l'astronef est posable sur la case demander ou non
         */
        public bool EstPosable()    
        {
                Case caseClique = Position;
                
                //Très probablement fausse si on prend une casse collé au bord car les cases a coté n'existe pas
                bool res = false;
                if (!caseClique.EstBord())
                {
                    Case haut = Position.Voisin(TypeDirection.Haut);
                    Case basGauche = Position.Voisin(TypeDirection.BasGauche);
                    Case basDroite = Position.Voisin(TypeDirection.BasDroite);
                    if (!haut.EstBord() | !basGauche.EstBord() | !basDroite.EstBord())
                    {
                            if (caseClique.Type().Equals(TypeCases.MONTAGNE) | caseClique.Type().Equals(TypeCases.PLAINE))
                            {
                                if (haut.Type().Equals(TypeCases.MONTAGNE) | haut.Type().Equals(TypeCases.PLAINE) | basGauche.Type().Equals(TypeCases.MONTAGNE) | basGauche.Type().Equals(TypeCases.PLAINE) | basDroite.Type().Equals(TypeCases.MONTAGNE) | basDroite.Type().Equals(TypeCases.PLAINE))
                                {
                                    foreach (Case cHaut in haut.Voisins)
                                    {
                                        if (!cHaut.EstBord())
                                        {
                                            foreach (Case cBD in basDroite.Voisins)
                                            {
                                                if (!cBD.EstBord())
                                                {
                                                    foreach (Case cBG in basGauche.Voisins)
                                                    {
                                                        if (!cBG.EstBord())
                                                        {
                                                            res = true;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }

                                }
                            }
                    }
                }
                return res;
            }

        public override bool SeDeplacer(Joueur j, Case arrivee)
        {
            return false;
        }
    }
}
